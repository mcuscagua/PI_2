install.packages("magick")
install.packages("image.libfacedetection", repos = "https://bnosac.github.io/drat")
image <- image_read("http://bnosac.be/images/bnosac/blog/wikipedia-25930827182-kerry-michel.jpg")
library(magick)
library(image.libfacedetection)
image <- image_read("http://bnosac.be/images/bnosac/blog/wikipedia-25930827182-kerry-michel.jpg")
image
faces <- image_detect_faces(image)
faces
plot(faces, image, border = "red", lwd = 7, col = "white")
image <- image_read("http://bnosac.be/images/bnosac/blog/wikipedia-25930827182-kerry-michel.jpg")
image
faces <- image_detect_faces(image)
faces
plot(faces, image, border = "red", lwd = 7, col = "white")
allfaces <- Map(
x      = faces$detections$x,
y      = faces$detections$y,
width  = faces$detections$width,
height = faces$detections$height,
f = function(x, y, width, height){
image_crop(image, geometry_area(x = x, y = y, width = width, height = height))
})
allfaces
allfaces <- do.call(c, allfaces)
allfaces
allfaces
library(magick)
library(image.libfacedetection)
image <- image_read("http://bnosac.be/images/bnosac/blog/wikipedia-25930827182-kerry-michel.jpg")
faces <- image_detect_faces(image)
faces
image
plot(faces, image, border = "red", lwd = 7, col = "white")
allfaces <- Map(
x      = faces$detections$x,
y      = faces$detections$y,
width  = faces$detections$width,
height = faces$detections$height,
f = function(x, y, width, height){
image_crop(image, geometry_area(x = x, y = y, width = width, height = height))
})
allfaces <- do.call(c, allfaces)
allfaces
file.choose()
install.packages("rio")
source('~/R Codes/Projects/Market Opening Strategy/Code/DB_Reader.R')
source('~/R Codes/Mastery/Integrator Project/facial_recognition_example.R')
Nodeofer = c(13,12,7,9,6,11,12,10,9,9,15,11,8,6,13,
10,14,8,11,10,6,9,14,8,6,9,15,8,7,7,5,7)
Preciosub = c(1235,1080,845,1522,1047,1979,1822,1253,
1297,946,1713,1024,1147,1092,1152,1336,
1131,1550,1884,2041,854,1483,1055,1545,
729,1729,1175,1593,785,744,1356,1262)
Nodeofer = c(13,12,7,9,6,11,12,10,9,9,15,11,8,6,13,
10,14,8,11,10,6,9,14,8,6,9,15,8,7,7,5,7)
edad = c(127,115,127,150,156,182,156,132,137,113,137,
117,137,153,117,126,170,182,162,184,143,159,
108,175,108,179,111,187,111,115,194,168)
Relojes = data.frame(Preciosub, Nodeofer, edad)
Relojes
cor(Relojes)
cor(Relojes)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?str
str(Relojes)
summary(Relojes)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
print('Los resultados del modelo son:')
print(summary(Modelo_Lineal))
confint(model2, level = 0.95)
confint(Modelo_Lineal, level = 0.95)
qt(c(0.025),df=29,lower.tail=TRUE)
source('~/.active-rstudio-document')
# ---- Y estimado vs Y observado
Y_est = predict(Modelo_Lineal, Base_Relojes$Preciosub)
# ---- Y estimado vs Y observado
Y_est = predict(Modelo_Lineal, Base_Relojes[,2:3])
Y_est
Base_Relojes$Preciosub
lines(Base_Relojes$Preciosub, col = 'blue')
plot(Base_Relojes$Preciosub, col = 'blue')
lines(Y_, col = 'blue')
lines(Y_est, col = 'red')
lines(Y_est, col = 'red', type = 'o')
plot(Base_Relojes$Preciosub, col = 'blue')
lines(Y_est, col = 'red', type = 'o')
?plot
plot(Base_Relojes$Preciosub, col = 'blue')
lines(Y_est, col = 'red', type = 'p')
plot(Base_Relojes$Preciosub, col = 'blue', xlab = '', ylab = '', main = 'Precio observado (blue) vs Precio estimado (red)')
lines(Y_est, col = 'red', type = 'p')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
ja = c(1,2,3,4,5,6)
ja[-c(3)]
source('~/.active-rstudio-document')
clc
source('~/.active-rstudio-document')
require(gtools)
permutations(n = 3, r = 3, v = 1:3)
require(gtools)
permutations(n = 3, r = 3, v = 1:3)
install.packages("gtool")
install.packages("gtools")
file.choose()
combn(3,2)
factorial(3)
total = 0
for (i in 1:32){
total = total + factorial(32)/(factorial(i)*factorial(32-i))
}
total
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return(sqrt(x^3 + y^3))
x = seq(-92000, -1000, 10)
x
y = seq(0, 1, 0.01)
y
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return(sqrt(x^3 + y^3))
x = seq(-92000, -1000, 10)
y = seq(0, 1, 0.01)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return(sqrt(x^3 + y^3))
x = seq(-92000, -1000, 100)
y = seq(0, 1, 0.01)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
warnings()
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return((x^3 + y^3)^(1/3))
x = seq(-92000, -1000, 100)
y = seq(0, 1, 0.01)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return((x^3 + y^3)^(1/3))
x = seq(-92000, -1000, 10)
y = seq(0, 1, 0.01)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
p1 <- plot_ly(z = z1) %>% add_surface()
library(plotly)
install.packages("plotly")
library(plotly)
p1 <- plot_ly(z = z1) %>% add_surface()
p1
library(plotly)
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return((x^3 + y^3)^(1/3))
x = seq(-92000, -1000, 100)
y = seq(0, 1, 0.01)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
p1 <- plot_ly(z = z1) %>% add_surface()
p1
library(plotly)
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return((x^3 + y^3)^(1/3))
x = seq(-92000, -1000, 100)
y = seq(0, 1, 0.01)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
p1 <- plot_ly(z = z1) %>% add_surface()
p2 <- plot_ly(z = z2) %>% add_surface()
p <- subplot(p1, p2)
p
library(plotly)
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return((x^3 + y^3)^(1/3))
x = seq(-92000, -1000, 100)
y = seq(0, 1, 0.01)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
p1 <- plot_ly(z = z1) %>% add_surface()
p2 <- plot_ly(z = z2) %>% add_surface()
p <- subplot(p1, p2)
p1
p2
p2 <- plot_ly(z = z2) %>% add_surface()
p2
z2
f2(x[1],y[1])
(3^3 + 2^3)^(1/3)
(x[1]^3 + y[1]^3)^(1/3)
library(plotly)
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return((x^3 + y^3)^(1/3))
x = seq(-92000, -1000, 100)/1000
y = seq(0, 1, 0.01)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
p1 <- plot_ly(z = z1) %>% add_surface()
p2 <- plot_ly(z = z2) %>% add_surface()
p = subplot(p1,p2)
p
z2
(-91^3 + 0^3)^(1/3)
-91^3
(-91^3)^(1/3)
(-91^3)^0.33
install.packages("kader")
library(kader)
kader:::cuberoot(9)
kader:::cuberoot(27)
kader:::cuberoot(-91)
kader:::cuberoot(-91^3)
library(plotly)
library(kader)
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return(kader:::cuberoot(x^3 + y^3))
x = seq(-92000, -1000, 100)
y = seq(0, 1, 0.01)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
p1 <- plot_ly(z = z1) %>% add_surface()
p2 <- plot_ly(z = z2) %>% add_surface()
z2
library(plotly)
library(kader)
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return(kader:::cuberoot(x^3 + y^3))
x = seq(-92000, -1000, 100)
y = seq(0, 1, 0.01)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
p1 <- plot_ly(z = z1) %>% add_surface()
p2 <- plot_ly(z = z2) %>% add_surface()
p = subplot(p1,p2)
p
p = subplot(p1,p2,nrows = 1)
p
library(plotly)
library(kader)
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return(kader:::cuberoot(x^3 + y^3))
x = seq(-92000, -1000, 100)
y = seq(0, 1, 0.01)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
p1 <- plot_ly(z = z1) %>% add_surface()
p2 <- plot_ly(z = z2) %>% add_surface()
p2
library(plotly)
library(kader)
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return(kader:::cuberoot(x^3 + y^3))
x = seq(-92000, -1000, 100)
y = seq(0, 10, 10)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
p1 <- plot_ly(z = z1) %>% add_surface()
p2 <- plot_ly(z = z2) %>% add_surface()
p2
z2 = matrix(0, nrow = length(y), ncol = length(x))
z2
z1
dim(z1)
dim(z2)
library(plotly)
library(kader)
f1 = function(x,y) return(x^3+y^3)
f2 = function(x,y) return(kader:::cuberoot(x^3 + y^3))
x = seq(-92000, -1000, 100)
y = seq(0, 100, 10)
z1 = matrix(0, nrow = length(y), ncol = length(x))
z2 = matrix(0, nrow = length(y), ncol = length(x))
for (i in 1:length(y)){
for (j in 1:length(x)){
z1[i,j] = f1(x[j],y[i])
z2[i,j] = f2(x[j],y[i])
}
}
p1 <- plot_ly(z = z1) %>% add_surface()
p2 <- plot_ly(z = z2) %>% add_surface()
p2
setwd("C:\\Users\\mcusc\\Documents\\Maestria\\S2\\PI_2\\Datos")
archivos1 = dir()
archivos1 = unique(sapply(archivos1, function(x){strsplit(x,"_")[[1]][1]}))
archivos1
